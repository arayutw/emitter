/**!
* emitter 0.0.1
* MIT License
* Copyright (c) 2023 Yuta Arai
**/
var i=Object.defineProperty,r=Object.defineProperties,a=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable,b=(t,e,r)=>e in t?i(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,f=(t,e)=>{for(var r in e=e||{})c.call(e,r)&&b(t,r,e[r]);if(s)for(var r of s(e))o.call(e,r)&&b(t,r,e[r]);return t},l=(t,e)=>r(t,a(e));class t{constructor(){this.Emitter$items=[]}on(t,e,r){this.off(t,e),this.Emitter$items.push([t,e,r])}off(r,i){for(let t=this.Emitter$items,e=0;t.length>e;e++)r===t[e][0]&&i===t[e][1]&&t.splice(e--,1)}emit(r,i){this.Emitter$items.forEach(t=>{var e;r===t[0]&&(t[1](l(f({},i),{target:this,type:r})),null!=(e=t[2]))&&e.once&&this.off(r,t[1])})}}export{t as Emitter};
